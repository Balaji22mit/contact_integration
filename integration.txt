import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Contact Email Sender',
      theme: ThemeData(
        primarySwatch: Colors.red,
      ),
      home: ContactListScreen(),
    );
  }
}

class ContactListScreen extends StatefulWidget {
  @override
  _ContactListScreenState createState() => _ContactListScreenState();
}

class _ContactListScreenState extends State<ContactListScreen> {
  final List<Contact> contacts = [
    Contact(name: 'Santhosh', email: 'santhosh@gmail.com'),
    Contact(name: 'Sathish', email: 'sathish@gmail.com'),
    Contact(name: 'Praveen', email: 'praveen@gmail.com'),
    Contact(name: 'Mani', email: 'mani@gmail.com'),
  ];

  Map<String, bool> loading = {};
  Map<String, String> statusMessage = {};

  Future<void> sendEmail(Contact contact) async {
    setState(() => loading[contact.email] = true);

    final Uri emailLaunchUri = Uri(
      scheme: 'mailto',
      path: contact.email,
      queryParameters: {
        'subject': 'Hello from Contact Email Sender',
        'body': 'Dear ${contact.name},\n\nThis is a test email.'
      },
    );

    try {
      await launchUrl(emailLaunchUri);
      setState(() {
        loading[contact.email] = false;
        statusMessage[contact.email] = '✅ Email sent!';
      });
    } catch (e) {
      setState(() {
        loading[contact.email] = false;
        statusMessage[contact.email] = '❌ Failed to send';
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Gmail'),
        centerTitle: true,
      ),
      drawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: [
            DrawerHeader(
              decoration: BoxDecoration(color: Colors.redAccent),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  CircleAvatar(
                    radius: 30,
                    backgroundColor: Colors.white,
                    child: Icon(Icons.person, size: 40),
                  ),
                  SizedBox(height: 10),
                  Text('Roshan', style: TextStyle(color: Colors.white, fontSize: 18)),
                  Text('roshan@gmail.com', style: TextStyle(color: Colors.white70)),
                ],
              ),
            ),
            ListTile(leading: Icon(Icons.inbox), title: Text('Inbox')),
            ListTile(leading: Icon(Icons.send), title: Text('Sent')),
            ListTile(leading: Icon(Icons.settings), title: Text('Settings')),
          ],
        ),
      ),
      body: ListView.builder(
        padding: EdgeInsets.all(12),
        itemCount: contacts.length,
        itemBuilder: (_, index) {
          final contact = contacts[index];
          return Card(
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
            elevation: 3,
            child: ListTile(
              contentPadding: EdgeInsets.all(16),
              leading: CircleAvatar(
                backgroundColor: Colors.redAccent,
                child: Text(contact.name[0]),
              ),
              title: Text(contact.name, style: TextStyle(fontWeight: FontWeight.bold)),
              subtitle: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(contact.email),
                  if (statusMessage[contact.email] != null)
                    Padding(
                      padding: const EdgeInsets.only(top: 4.0),
                      child: Text(
                        statusMessage[contact.email]!,
                        style: TextStyle(color: Colors.green),
                      ),
                    ),
                ],
              ),
              trailing: loading[contact.email] == true
                  ? SizedBox(
                width: 24,
                height: 24,
                child: CircularProgressIndicator(strokeWidth: 2),
              )
                  : ElevatedButton(
                onPressed: () => sendEmail(contact),
                child: Text('Send'),
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.redAccent,
                  padding: EdgeInsets.symmetric(horizontal: 12),
                ),
              ),
              isThreeLine: true,
            ),
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          // Add contact functionality (optional)
        },
        backgroundColor: Colors.redAccent,
        child: Icon(Icons.add),
      ),
    );
  }
}

class Contact {
  final String name;
  final String email;

  Contact({required this.name, required this.email});
}
